import{c as se}from"./chunk-4KE642ED-BeG2C4YJ.js";import{p as re}from"./treemap-KMMF4GRG-DK74C3S3-CzpnMqvo.js";import{m,L as q,O as K,a6 as ie,G as ne,bq as F,t as B,aa as I,br as oe,bs as ce,bt as $,k as j,j as de,Z as pe,J as he,d as me,Q as fe,K as ye,I as ue,bu as Se,X as ge}from"./mermaid.esm.min-D65HMj23.js";import{y as xe}from"./chunk-EJZ3NKMF-QHseSYWN.js";import"./chunk-5ZJXQJOJ-BXFEBTr6.js";import"./app-B4ncHSV0.js";var w,Q=(w=class{constructor(){this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.setAccTitle=de,this.getAccTitle=pe,this.setDiagramTitle=he,this.getDiagramTitle=me,this.getAccDescription=fe,this.setAccDescription=ye}getNodes(){return this.nodes}getConfig(){let a=ue,i=K();return q({...a.treemap,...i.treemap??{}})}addNode(a,i){this.nodes.push(a),this.levels.set(a,i),i===0&&(this.outerNodes.push(a),this.root??=a)}getRoot(){return{name:"",children:this.outerNodes}}addClass(a,i){let r=this.classes.get(a)??{id:a,styles:[],textStyles:[]},c=i.replace(/\\,/g,"§§§").replace(/,/g,";").replace(/§§§/g,",").split(";");c&&c.forEach(s=>{Se(s)&&(r?.textStyles?r.textStyles.push(s):r.textStyles=[s]),r?.styles?r.styles.push(s):r.styles=[s]}),this.classes.set(a,r)}getClasses(){return this.classes}getStylesForClass(a){return this.classes.get(a)?.styles??[]}clear(){ge(),this.nodes=[],this.levels=new Map,this.outerNodes=[],this.classes=new Map,this.root=void 0}},m(w,"TreeMapDB"),w);function U(d){if(!d.length)return[];let a=[],i=[];return d.forEach(r=>{let c={name:r.name,children:r.type==="Leaf"?void 0:[]};for(c.classSelector=r?.classSelector,r?.cssCompiledStyles&&(c.cssCompiledStyles=[r.cssCompiledStyles]),r.type==="Leaf"&&r.value!==void 0&&(c.value=r.value);i.length>0&&i[i.length-1].level>=r.level;)i.pop();if(i.length===0)a.push(c);else{let s=i[i.length-1].node;s.children?s.children.push(c):s.children=[c]}r.type!=="Leaf"&&i.push({node:c,level:r.level})}),a}m(U,"buildHierarchy");var be=m((d,a)=>{se(d,a);let i=[];for(let s of d.TreemapRows??[])s.$type==="ClassDefStatement"&&a.addClass(s.className??"",s.styleText??"");for(let s of d.TreemapRows??[]){let h=s.item;if(!h)continue;let f=s.indent?parseInt(s.indent):0,N=Ce(h),l=h.classSelector?a.getStylesForClass(h.classSelector):[],L=l.length>0?l.join(";"):void 0,b={level:f,name:N,type:h.$type,value:h.value,classSelector:h.classSelector,cssCompiledStyles:L};i.push(b)}let r=U(i),c=m((s,h)=>{for(let f of s)a.addNode(f,h),f.children&&f.children.length>0&&c(f.children,h+1)},"addNodesRecursively");c(r,0)},"populate"),Ce=m(d=>d.name?String(d.name):"","getItemName"),Y={parser:{yy:void 0},parse:m(async d=>{try{let a=await re("treemap",d);B.debug("Treemap AST:",a);let i=Y.parser?.yy;if(!(i instanceof Q))throw new Error("parser.parser?.yy was not a TreemapDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");be(a,i)}catch(a){throw B.error("Error parsing treemap:",a),a}},"parse")},$e=10,v=10,P=25,ve=m((d,a,i,r)=>{let c=r.db,s=c.getConfig(),h=s.padding??$e,f=c.getDiagramTitle(),N=c.getRoot(),{themeVariables:l}=K();if(!N)return;let L=f?30:0,b=ie(a),G=s.nodeWidth?s.nodeWidth*v:960,H=s.nodeHeight?s.nodeHeight*v:500,E=G,J=H+L;b.attr("viewBox",`0 0 ${E} ${J}`),ne(b,J,E,s.useMaxWidth);let C;try{let e=s.valueFormat||",";if(e==="$0,0")C=m(t=>"$"+F(",")(t),"valueFormat");else if(e.startsWith("$")&&e.includes(",")){let t=/\.\d+/.exec(e),n=t?t[0]:"";C=m(y=>"$"+F(","+n)(y),"valueFormat")}else if(e.startsWith("$")){let t=e.substring(1);C=m(n=>"$"+F(t||"")(n),"valueFormat")}else C=F(e)}catch(e){B.error("Error creating format function:",e),C=F(",")}let k=I().range(["transparent",l.cScale0,l.cScale1,l.cScale2,l.cScale3,l.cScale4,l.cScale5,l.cScale6,l.cScale7,l.cScale8,l.cScale9,l.cScale10,l.cScale11]),_=I().range(["transparent",l.cScalePeer0,l.cScalePeer1,l.cScalePeer2,l.cScalePeer3,l.cScalePeer4,l.cScalePeer5,l.cScalePeer6,l.cScalePeer7,l.cScalePeer8,l.cScalePeer9,l.cScalePeer10,l.cScalePeer11]),W=I().range([l.cScaleLabel0,l.cScaleLabel1,l.cScaleLabel2,l.cScaleLabel3,l.cScaleLabel4,l.cScaleLabel5,l.cScaleLabel6,l.cScaleLabel7,l.cScaleLabel8,l.cScaleLabel9,l.cScaleLabel10,l.cScaleLabel11]);f&&b.append("text").attr("x",E/2).attr("y",L/2).attr("class","treemapTitle").attr("text-anchor","middle").attr("dominant-baseline","middle").text(f);let O=b.append("g").attr("transform",`translate(0, ${L})`).attr("class","treemapContainer"),ee=oe(N).sum(e=>e.value??0).sort((e,t)=>(t.value??0)-(e.value??0)),X=ce().size([G,H]).paddingTop(e=>e.children&&e.children.length>0?P+v:0).paddingInner(h).paddingLeft(e=>e.children&&e.children.length>0?v:0).paddingRight(e=>e.children&&e.children.length>0?v:0).paddingBottom(e=>e.children&&e.children.length>0?v:0).round(!0)(ee),te=X.descendants().filter(e=>e.children&&e.children.length>0),T=O.selectAll(".treemapSection").data(te).enter().append("g").attr("class","treemapSection").attr("transform",e=>`translate(${e.x0},${e.y0})`);T.append("rect").attr("width",e=>e.x1-e.x0).attr("height",P).attr("class","treemapSectionHeader").attr("fill","none").attr("fill-opacity",.6).attr("stroke-width",.6).attr("style",e=>e.depth===0?"display: none;":""),T.append("clipPath").attr("id",(e,t)=>`clip-section-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-12)).attr("height",P),T.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class",(e,t)=>`treemapSection section${t}`).attr("fill",e=>k(e.data.name)).attr("fill-opacity",.6).attr("stroke",e=>_(e.data.name)).attr("stroke-width",2).attr("stroke-opacity",.4).attr("style",e=>{if(e.depth===0)return"display: none;";let t=$({cssCompiledStyles:e.data.cssCompiledStyles});return t.nodeStyles+";"+t.borderStyles.join(";")}),T.append("text").attr("class","treemapSectionLabel").attr("x",6).attr("y",P/2).attr("dominant-baseline","middle").text(e=>e.depth===0?"":e.data.name).attr("font-weight","bold").attr("style",e=>{if(e.depth===0)return"display: none;";let t="dominant-baseline: middle; font-size: 12px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).each(function(e){if(e.depth===0)return;let t=j(this),n=e.data.name;t.text(n);let y=e.x1-e.x0,g=6,x;s.showValues!==!1&&e.value?x=y-10-30-10-g:x=y-g-6;let S=Math.max(15,x),u=t.node();if(u.getComputedTextLength()>S){let o="...",p=n;for(;p.length>0;){if(p=n.substring(0,p.length-1),p.length===0){t.text(o),u.getComputedTextLength()>S&&t.text("");break}if(t.text(p+o),u.getComputedTextLength()<=S)break}}}),s.showValues!==!1&&T.append("text").attr("class","treemapSectionValue").attr("x",e=>e.x1-e.x0-10).attr("y",P/2).attr("text-anchor","end").attr("dominant-baseline","middle").text(e=>e.value?C(e.value):"").attr("font-style","italic").attr("style",e=>{if(e.depth===0)return"display: none;";let t="text-anchor: end; dominant-baseline: middle; font-size: 10px; fill:"+W(e.data.name)+"; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")});let ae=X.leaves(),A=O.selectAll(".treemapLeafGroup").data(ae).enter().append("g").attr("class",(e,t)=>`treemapNode treemapLeafGroup leaf${t}${e.data.classSelector?` ${e.data.classSelector}`:""}x`).attr("transform",e=>`translate(${e.x0},${e.y0})`);A.append("rect").attr("width",e=>e.x1-e.x0).attr("height",e=>e.y1-e.y0).attr("class","treemapLeaf").attr("fill",e=>e.parent?k(e.parent.data.name):k(e.data.name)).attr("style",e=>$({cssCompiledStyles:e.data.cssCompiledStyles}).nodeStyles).attr("fill-opacity",.3).attr("stroke",e=>e.parent?k(e.parent.data.name):k(e.data.name)).attr("stroke-width",3),A.append("clipPath").attr("id",(e,t)=>`clip-${a}-${t}`).append("rect").attr("width",e=>Math.max(0,e.x1-e.x0-4)).attr("height",e=>Math.max(0,e.y1-e.y0-4)),A.append("text").attr("class","treemapLabel").attr("x",e=>(e.x1-e.x0)/2).attr("y",e=>(e.y1-e.y0)/2).attr("style",e=>{let t="text-anchor: middle; dominant-baseline: middle; font-size: 38px;fill:"+W(e.data.name)+";",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.data.name).each(function(e){let t=j(this),n=e.x1-e.x0,y=e.y1-e.y0,g=t.node(),x=4,S=n-2*x,u=y-2*x;if(S<10||u<10){t.style("display","none");return}let o=parseInt(t.style("font-size"),10),p=8,z=28,D=.6,M=6,R=2;for(;g.getComputedTextLength()>S&&o>p;)o--,t.style("font-size",`${o}px`);let V=Math.max(M,Math.min(z,Math.round(o*D))),Z=o+R+V;for(;Z>u&&o>p&&(o--,V=Math.max(M,Math.min(z,Math.round(o*D))),!(V<M&&o===p));)t.style("font-size",`${o}px`),Z=o+R+V;t.style("font-size",`${o}px`),(g.getComputedTextLength()>S||o<p||u<o)&&t.style("display","none")}),s.showValues!==!1&&A.append("text").attr("class","treemapValue").attr("x",e=>(e.x1-e.x0)/2).attr("y",function(e){return(e.y1-e.y0)/2}).attr("style",e=>{let t="text-anchor: middle; dominant-baseline: hanging; font-size: 28px;fill:"+W(e.data.name)+";",n=$({cssCompiledStyles:e.data.cssCompiledStyles});return t+n.labelStyles.replace("color:","fill:")}).attr("clip-path",(e,t)=>`url(#clip-${a}-${t})`).text(e=>e.value?C(e.value):"").each(function(e){let t=j(this),n=this.parentNode;if(!n){t.style("display","none");return}let y=j(n).select(".treemapLabel");if(y.empty()||y.style("display")==="none"){t.style("display","none");return}let g=parseFloat(y.style("font-size")),x=28,S=.6,u=6,o=2,p=Math.max(u,Math.min(x,Math.round(g*S)));t.style("font-size",`${p}px`);let z=(e.y1-e.y0)/2+g/2+o;t.attr("y",z);let D=e.x1-e.x0,M=e.y1-e.y0-4,R=D-8;t.node().getComputedTextLength()>R||z+p>M||p<u?t.style("display","none"):t.style("display",null)});let le=s.diagramPadding??8;xe(b,le,"flowchart",s?.useMaxWidth||!1)},"draw"),we=m(function(d,a){return a.db.getClasses()},"getClasses"),Le={draw:ve,getClasses:we},ke={sectionStrokeColor:"black",sectionStrokeWidth:"1",sectionFillColor:"#efefef",leafStrokeColor:"black",leafStrokeWidth:"1",leafFillColor:"#efefef",labelColor:"black",labelFontSize:"12px",valueFontSize:"10px",valueColor:"black",titleColor:"black",titleFontSize:"14px"},Te=m(({treemap:d}={})=>{let a=q(ke,d);return`
  .treemapNode.section {
    stroke: ${a.sectionStrokeColor};
    stroke-width: ${a.sectionStrokeWidth};
    fill: ${a.sectionFillColor};
  }
  .treemapNode.leaf {
    stroke: ${a.leafStrokeColor};
    stroke-width: ${a.leafStrokeWidth};
    fill: ${a.leafFillColor};
  }
  .treemapLabel {
    fill: ${a.labelColor};
    font-size: ${a.labelFontSize};
  }
  .treemapValue {
    fill: ${a.valueColor};
    font-size: ${a.valueFontSize};
  }
  .treemapTitle {
    fill: ${a.titleColor};
    font-size: ${a.titleFontSize};
  }
  `},"getStyles"),ze=Te,De={parser:Y,get db(){return new Q},renderer:Le,styles:ze};export{De as diagram};
