(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{312:function(t,e,o){"use strict";o.r(e);var s=o(10),a=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"sync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sync"}},[t._v("#")]),t._v(" "),e("code",[t._v("sync")])]),t._v(" "),e("p",[t._v("Synchronizes the local version number of each package to the current version of the given "),e("code",[t._v("dist-tag")]),t._v(" in the npm registry. This is useful for helping get a repo back into a valid state after publishing fails partway through.")]),t._v(" "),e("p",[t._v("By default, the local version will only be updated if it's "),e("strong",[t._v("older")]),t._v(" than the version the specified "),e("code",[t._v("dist-tag")]),t._v(" points to. Use "),e("code",[t._v("--force")]),t._v(" to override this behavior.")]),t._v(" "),e("p",[t._v("After syncing, be sure to commit and push the changes.")]),t._v(" "),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("p",[t._v("In addition to the options below, certain "),e("a",{attrs:{href:"./options"}},[t._v("common options")]),t._v(" also apply.")]),t._v(" "),e("h4",{attrs:{id:"force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force"}},[t._v("#")]),t._v(" "),e("code",[t._v("--force")])]),t._v(" "),e("p",[t._v("Force the sync command to skip the version comparison and use the version in the registry as is.")]),t._v(" "),e("h4",{attrs:{id:"tag-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tag-t"}},[t._v("#")]),t._v(" "),e("code",[t._v("--tag, -t")])]),t._v(" "),e("p",[t._v("Sync with the version this "),e("code",[t._v("dist-tag")]),t._v(" points to. Defaults to the tag from repo, group, or package level beachball configs if present, falling back to "),e("code",[t._v("latest")]),t._v(".")])])}),[],!1,null,null,null);e.default=a.exports}}]);