(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{368:function(t,a,e){"use strict";e.r(a);var s=e(25),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"check"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#check"}},[t._v("#")]),t._v(" "),e("code",[t._v("check")])]),t._v(" "),e("p",[t._v("It is useful to enforce that "),e("a",{attrs:{href:"./concepts/change-files"}},[t._v("change files")]),t._v(" are checked in for each PR before they enter the target branch. In this way, all changes are captured and would affect semver appropriately. To check to make sure all changes are captured in change files, simply run:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ beachball check\n")])])]),e("p",[t._v("This command also checks for various types of misconfigurations that would result in problems when attempting to publish.")]),t._v(" "),e("h3",{attrs:{id:"where-should-check-be-run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where-should-check-be-run"}},[t._v("#")]),t._v(" Where Should Check Be Run?")]),t._v(" "),e("h4",{attrs:{id:"as-a-step-in-the-pr-review-gate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-a-step-in-the-pr-review-gate"}},[t._v("#")]),t._v(" As a step in the PR review gate")]),t._v(" "),e("p",[t._v("Add a step "),e("code",[t._v("yarn checkchange")]),t._v(" in your PR validation build, where "),e("code",[t._v("checkchange")]),t._v(" is defined in "),e("code",[t._v("package.json")]),t._v(" as "),e("code",[t._v("beachball check")]),t._v(" (with any appropriate options).")]),t._v(" "),e("p",[t._v("Note that in GitHub action workflows, you "),e("strong",[t._v("must")]),t._v(" specify "),e("code",[t._v("fetch-depth: 0")]),t._v(" in the "),e("code",[t._v("checkout")]),t._v(" option. You can see a full example in "),e("a",{attrs:{href:"https://github.com/microsoft/beachball/blob/master/.github/workflows/pr.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("beachball's own PR workflow"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetch-depth")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Use Node.js 12\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v1\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn checkchange\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# build/test steps as appropriate")]),t._v("\n")])])]),e("p",[t._v("Another example, for Travis CI:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("language")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node_js\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node_js")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn checkchange\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# build/test steps as appropriate")]),t._v("\n")])])]),e("h4",{attrs:{id:"as-git-hook-optional"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#as-git-hook-optional"}},[t._v("#")]),t._v(" As git hook (optional)")]),t._v(" "),e("p",[t._v("For a reference of git hooks, take a look at "),e("a",{attrs:{href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("this documentation"),e("OutboundLink")],1),t._v(". It is recommended to place this hook as a pre-push.")])])}),[],!1,null,null,null);a.default=n.exports}}]);