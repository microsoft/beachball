(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{364:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ci-integration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ci-integration"}},[t._v("#")]),t._v(" CI Integration")]),t._v(" "),a("p",[t._v("For the repository and package owners who want to automate the bumping of versions based on change files with "),a("code",[t._v("beachball")]),t._v(", you'll need to provide some information for your Continuous Integration (CI) systems. These one-time setup steps will be unique for different CI system naturally, but the general idea remain the same. "),a("code",[t._v("beachball publish")]),t._v(" needs write access to with are the git repo and npm registry.")]),t._v(" "),a("h3",{attrs:{id:"git-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-authentication"}},[t._v("#")]),t._v(" Git Authentication")]),t._v(" "),a("p",[t._v("There are several ways to authenticate against a git repository. Here's one way to do so with a personal token. Put this in your publishing build scripts:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someone@example.com"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someone"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin https://"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("pat"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("@github.com/someuser/someproject.git\n")])])]),a("blockquote",[a("p",[t._v('Note: never check in your credentials into a git repository! Simply use the "secret variable" feature to pass in the PAT here.')])]),t._v(" "),a("p",[t._v('These commands will give the git user a name and email. Also, the last command will set a different URL for the git remote named "origin". If you have SSH key pairs setup, you would not need to run that last line in your scripts.')]),t._v(" "),a("h3",{attrs:{id:"npm-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-authentication"}},[t._v("#")]),t._v(" NPM Authentication")]),t._v(" "),a("p",[t._v("To publish to a npm registry, you'll need to have access to the write-enabled access token. npm registry has "),a("a",{attrs:{href:"https://docs.npmjs.com/creating-and-viewing-authentication-tokens",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),a("OutboundLink")],1),t._v(" on how to create automation tokens. Pass this token into the command line:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("beachball publish -n SOME_AUTH_TOKEN\n")])])]),a("p",[t._v("A common requirement is to be able to publish to a private registry other than npmjs.org. You can also customize the registry URL by passing in one additional parameter:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("beachball publish -n SOME_AUTH_TOKEN -r http://SOME_REGISTRY_URL/\n")])])]),a("h3",{attrs:{id:"package-json-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json-script"}},[t._v("#")]),t._v(" package.json script")]),t._v(" "),a("p",[t._v("It's recommended to encapsulate any custom options in a "),a("code",[t._v("package.json")]),t._v(" script:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publish:beachball"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beachball publish -n $(npm.token)"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Then inside the CI script, simply call "),a("code",[t._v("yarn publish:beachball")]),t._v(" or "),a("code",[t._v("npm run publish:beachball")]),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);